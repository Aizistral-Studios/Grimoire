buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'idea'
apply plugin: 'maven'

group = 'io.github.crucible'
version = '1.0.2a'

archivesBaseName = "[0]Grimoire"

sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = "1.12.2-14.23.4.2705"
    runDir = "run"

    mappings = "snapshot_20171212"
    makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

configurations {
    shade
    compile.extendsFrom shade
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'http://repo.spongepowered.org/maven/'
    }
    mavenCentral()
}

dependencies {
    shade("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: "launchwrapper"
        exclude module: 'guava'
    }
}

processResources {

    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

}

ext {
    new File(project.buildDir, 'mixins').mkdirs();
    mixinSrg = new File(project.buildDir, 'mixins/mixins.grimoire.srg')
    mixinSrg.createNewFile()
    mixinRefMap = new File(project.buildDir, "mixins/grimoire.refmap.json")
    mixinRefMap.createNewFile()
}

jar {
    from project.mixinRefMap

    manifest {
        attributes(
                'FMLCorePlugin': "io.github.crucible.grimoire.Grimoire",
                'FMLCorePluginContainsFMLMod': 'false',
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker'
        )
    }

    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
        from(project.zipTree(dep)) {
            include 'META-INF/services', 'META-INF/services/**'
        }
    }

}



compileJava {
    options.compilerArgs += [
            '-Xlint:-processing',
            "-AoutSrgFile=${project.mixinSrg.canonicalPath}",
            "-AoutRefMapFile=${project.mixinRefMap.canonicalPath}",
            "-AreobfSrgFile=${project.file('build/srgs/mcp-srg.srg').canonicalPath}"
    ]
}

