buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven {
            name = 'spongepowered-repo'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        jcenter()
        mavenCentral()
        gradlePluginPortal()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: "com.github.johnrengelman.shadow"
project.evaluationDependsOn(":Grimoire-shared")
// Force java 8 features
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

// All files should be UTF-8
compileJava.options.encoding = 'UTF-8'
archivesBaseName = "Grimoire-mc1.12"

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
}

repositories {
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    mavenCentral()
}

dependencies {
    shadow("org.spongepowered:mixin:0.8.3-SNAPSHOT") {
        exclude module: "asm-commons"
        exclude module: "asm-tree"
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "log4j-core"
        exclude module: "gson"
        exclude module: "commons-io"
    }
    shadow(project(':Grimoire-shared'))
    annotationProcessor("org.spongepowered:mixin:0.8.3-SNAPSHOT:processor")
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2855'
    implementation fileTree(dir: file('libs'), include: ['*.jar'])
}

mixin {
    disableAnnotationProcessorCheck()
}

//sourceSets {
//    main.resources {
//        srcDir project(':Grimoire-shared').file('src/main/resources')
//    }
//    main.java {
//        srcDir project(':Grimoire-shared').file('src/main/java')
//    }
//}

processResources {

    inputs.property "version", project.version
    inputs.property "mcversion", '1.12.2'

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        expand "version": project.version, "mcversion": '1.12.2'
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }

}

jar {
    manifest {
        attributes([
                "Specification-Title": "io.github.crucible.grimoire",
                "Specification-Vendor": "Grimoire",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${project.version}",
                "Implementation-Vendor" :"Grimoire",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'FMLCorePlugin': "io.github.crucible.grimoire.mc1_12.GrimoireCoremod",
                'FMLCorePluginContainsFMLMod': 'true',
                "ForceLoadAsMod": "true",
                'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker'
        ])
    }
}

shadowJar {
    configurations = [project.configurations.shadow]
    classifier ""
}

artifacts {
    archives shadowJar
}

jar.finalizedBy('reobfJar')